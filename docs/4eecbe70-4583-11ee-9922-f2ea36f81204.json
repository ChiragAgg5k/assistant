{"page_content": "[{\"level\": 1, \"title\": \" OAuth 2 \", \"body\": [\" OAuth authentication allows users to log in using accounts from other popular services. This can be convenient for users because they can start using your app without creating a new account. It can also be more secure, because the user has one less password that could become vulnerable.\", \" When using OAuth to authenticate, the authentication request is initiated from the client application. The user is then redirected to an OAuth 2 provider to complete the authentication step, and finally, the user is redirected back to the client application.\"]}, {\"level\": 2, \"title\": \"Configure OAuth 2 Login\", \"body\": [\" Before using OAuth 2 login, you need to enable and configure an OAuth 2 login provider.\", \" Navigate to your Appwrite project. Navigate to Auth > Settings. Find and open the OAuth provider. In the OAuth 2 settings modal, use the toggle to enable the provider. Create and OAuth 2 app on the provider's developer platform. Copy information from your OAuth2 provider's developer platform to fill the OAuth2 Settings modal in the Appwrite Console. Configure redirect URL in your OAuth 2 provider's developer platform. Set it to URL provided to you by OAuth2 Settings modal in Appwrite Console.\"]}, {\"level\": 2, \"title\": \"Initialize OAuth 2 Login\", \"body\": [\" To initialize the OAuth 2 login process, use the Create OAuth 2 Session route.\", \"  Web  import { Client, Account } from \\\"appwrite\\\";\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]');               // Your project ID\\n\\nconst account = new Account(client);\\n\\n// Go to OAuth provider login page\\naccount.createOAuth2Session('amazon', [LINK_ON_SUCCESS], [LINK_ON_FAILURE]);    Flutter  import 'package:appwrite/appwrite.dart';\\n\\nfinal client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]');               // Your project ID\\n\\nfinal account = Account(client);\\n\\n// Go to OAuth provider login page\\nawait account.createOAuth2Session(provider: 'amazon');    Android In order to capture the Appwrite OAuth callback url, the following activity needs to be added inside the <application> tag, along side the existing <activity> tags in your AndroidManifest.xml. Be sure to replace the [PROJECT_ID] string with your actual Appwrite project ID. You can find your Appwrite project ID in your project settings screen in your Appwrite console. <manifest ...>\\n  ...\\n  <application ...>\\n    ...\\n    <!-- Add this inside the `<application>` tag, along side the existing `<activity>` tags -->\\n    <activity android:name=\\\"io.appwrite.views.CallbackActivity\\\" android:exported=\\\"true\\\">\\n      <intent-filter android:label=\\\"android_web_auth\\\">\\n        <action android:name=\\\"android.intent.action.VIEW\\\" />\\n        <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n        <category android:name=\\\"android.intent.category.BROWSABLE\\\" />\\n        <data android:scheme=\\\"appwrite-callback-[PROJECT_ID]\\\" />\\n      </intent-filter>\\n    </activity>\\n  </application>\\n</manifest>  import io.appwrite.Client\\nimport io.appwrite.services.Account\\n\\nval client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n\\nval account = Account(client)\\n\\n// Go to OAuth provider login page\\naccount.createOAuth2Session(provider = \\\"amazon\\\")    Apple In order to capture the Appwrite OAuth callback url, the following URL scheme needs to added to your Info.plist. <key>CFBundleURLTypes</key>\\n<array>\\n<dict>\\n    <key>CFBundleTypeRole</key>\\n    <string>Editor</string>\\n    <key>CFBundleURLName</key>\\n    <string>io.appwrite</string>\\n    <key>CFBundleURLSchemes</key>\\n    <array>\\n        <string>appwrite-callback-[PROJECT_ID]</string>\\n    </array>\\n</dict>\\n</array>\\nIf you're using UIKit, you'll also need to add a hook to your SceneDelegate.swift file to ensure cookies work correctly. \\nfunc scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\\n    guard let url = URLContexts.first?.url,\\n        url.absoluteString.contains(\\\"appwrite-callback\\\") else {\\n        return\\n    }\\n    WebAuthComponent.handleIncomingCookie(from: url)\\n}\\n  import Appwrite\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n\\nlet account = Account(client)\\n\\n// Go to OAuth provider login page\\ntry await account.createOAuth2Session(provider: \\\"amazon\\\")    GraphQL  OAuth 2 is not available through the GraphQL API. You can use the REST API or any Client SDK instead.  \", \" You'll be redirected to the OAuth 2 provider's login page to log in. Once complete, your user will be redirected back to your app.\", \" You can optionally configure success or failure redirect links on web to handle success and failure scenarios.\"]}, {\"level\": 2, \"title\": \"OAuth 2 Profile\", \"body\": [\"After authenticating a user through their OAuth 2 provider, you can fetch their profile information such as their avatar image or name.\\nTo do this you can use the access token from the OAuth 2 provider and make API calls to the provider.\", \"After creating an OAuth 2 session, you can fetch the session to get information about the provider.\", \" Web  import { Client, Account } from \\\"appwrite\\\";\\n\\nconst client = new Client();\\n\\nconst account = new Account(client);\\n\\nconst session = await account.getSession('current');\\n\\n// Provider information\\nconsole.log(session.provider);\\nconsole.log(session.providerUid);\\nconsole.log(session.providerAccessToken);    Flutter  import 'package:appwrite/appwrite.dart';\\n\\nfinal client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]');               // Your project ID\\n\\nfinal account = Account(client);\\n\\nfinal session = await getSession(\\n    sessionId : \\\"[SESSION_ID]\\\"\\n);\\n\\n// Provider information\\nprint(session.provider);\\nprint(session.providerUid);\\nprint(session.providerAccessToken);   Android  import io.appwrite.Client\\nimport io.appwrite.services.Account\\n\\nval client = Client(context)\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"5df5acd0d48c2\\\") // Your project ID\\n\\nval account = Account(client)\\n\\nval response = account.getSession(\\n    sessionId = \\\"[SESSION_ID]\\\"\\n)\\n\\n// Provider information\\nprint(session.provider);\\nprint(session.providerUid);\\nprint(session.providerAccessToken);   Apple  import Appwrite\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"5df5acd0d48c2\\\") // Your project ID\\n\\nlet account = Account(client)\\n\\nlet session = try await account.getSession(\\n    sessionId: \\\"[SESSION_ID]\\\"\\n)\\n\\n// Provider information\\nprint(session.provider);\\nprint(session.providerUid);\\nprint(session.providerAccessToken); \", \" An OAuth 2 session will have the following attributes.\", \"   property Description     provider The OAuth2 Provider.   providerUid  User ID from the OAuth 2 Provider.   providerAccessToken Access token from the OAuth 2 provider. Use this to make requests to the OAuth 2 provider to fetch personal data.   providerAccessTokenExpiry Check this value to know if an access token is about to expire.  \", \" You can use the providerAccessToken to make requests to your OAuth 2 provider. Refer to the docs for the OAuth 2 provider you're using to learn about making API calls with the access token.\"]}]", "metadata": {"source": "http://167.172.175.165:2080/docs/authentication-oauth"}}