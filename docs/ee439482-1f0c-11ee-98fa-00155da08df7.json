{"page_content": "[{\"level\": 1, \"title\": \" Getting Started for Server \", \"body\": [\"Appwrite is a development platform that provides a powerful API and management console to get your next project up and running quickly.\", \"Create your first project now and start building on Appwrite Cloud.\"]}, {\"level\": 2, \"title\": \"Get the Appwrite SDK for Your Platform\", \"body\": [\"We provide libraries and SDKs for major programming languages and platforms so you don't have to write code for interacting with our HTTP APIs from scratch.\", \"Choose your desired SDK corresponding to your product development platform and import it using the given package manager. For the sake of this tutorial we use code examples using Appwrite SDKs for Node.js, PHP, Python, Ruby, Dart, and Deno, but the same can be applied to any of our server side SDKs.\", \"  Node.js  npm install node-appwrite --save    PHP  composer require 'appwrite/appwrite'    Python  pip install appwrite    Ruby  gem install appwrite    Deno  import * as sdk from \\\"https://deno.land/x/appwrite/mod.ts\\\";    Dart  dart pub add dart_appwrite    Kotlin  Add maven repositories to your build.gradle(.kts) file  repositories {\\n    mavenCentral()\\n}  Add Appwrite SDK under dependencies in your build.gradle(.kts) file  dependencies {\\n    implementation(\\\"io.appwrite:sdk-for-kotlin:2.0.0\\\")\\n}     Swift  Add the Appwrite Swift SDK package as a dependency  dependencies: [\\n    .package(\\n        name: \\\"Appwrite\\\",\\n        url: \\\"https://github.com/appwrite/sdk-for-swift.git\\\",\\n        .exact(\\\"2.0.0\\\")\\n    )\\n]  Add the dependency product to your target  dependencies: [\\n    \\\"Appwrite\\\"\\n]  \"]}, {\"level\": 2, \"title\": \"Create Your First Appwrite Project\", \"body\": [\"Go to your new Appwrite console and click the  icon in the top navigation header or on the 'Create Project' button on your console homepage. Choose a name for your project and click create to get started.\"]}, {\"level\": 2, \"title\": \"Authentication\", \"body\": [\"The Appwrite server API provides you with two authentication methods. The first one uses an API key, and the second is using a JSON Web Token (JWT). Each method has different use cases, and you can use whichever fills your app needs.\"]}, {\"level\": 3, \"title\": \"API Key\", \"body\": [\"Using an API Key you can interact with the Appwrite server API as an admin. You'll be able to access all of your project resources as long as your key has the relevant access scopes attached. To get your first API key, go to your appwrite console, choose the project you created in the step before and click the 'API Keys' link.\", \"Inside your API keys screen, click the 'Add API Key' button, choose your key name, for example: 'Demo Key', and select the scopes your key are granted to use. After complete, you could copy your new API Key and use it to initialize your Appwrite server SDK. To learn about the different API scopes available to you, read more about Appwrite API Keys \", \"  Node.js  const { Client } = require('node-appwrite');\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n    PHP  use Appwrite\\\\Client;\\n\\n$client = (new Client())\\n    ->setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    ->setProject('[PROJECT_ID]')                // Your project ID\\n    ->setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n    Python  from appwrite.client import Client\\n\\nclient = Client()\\n\\nclient = (client\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret API key\\n)\\n    Ruby  require 'appwrite'\\n\\nclient = Appwrite::Client.new()\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret API key\\n    Deno  import { Client } from \\\"https://deno.land/x/appwrite/mod.ts\\\";\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n    Dart  import 'package:dart_appwrite/dart_appwrite.dart';\\n\\nClient client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n    Kotlin  import io.appwrite.Client\\n\\nval client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setKey(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret API key\\n    Swift  import Appwrite\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setKey(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret API key\\n  \", \" API Key Authentication When using Server SDKs, you authenticate with API keys. API keys are not restricted by account-based permissions but have restrictions on the types of resources that can be accessed. This means API keys can access all resources of specified types, regardless of which account can access them. Learn more about API keys\"]}, {\"level\": 3, \"title\": \"JSON Web Token (JWT) \\u00a0version >= 0.8\", \"body\": [\"Using a JSON Web Token (JWT), you can interact with the Appwrite server API as a specific user. You'll be able to access only the relevant user resources and perform actions on his behalf.\", \"To create a JWT, you need to use the \\\"account->createJWT\\\" method using one of the Appwrite client SDKs. Before creating a token, you need to make sure your user is authenticated using the createSession method or log in with an OAuth provider.\", \"  Web SDK  const account = new Account(client);\\naccount.createJWT()\\n    .then(function (response) {\\n        console.log(response);\\n    }, function (error) {\\n        console.log(error);\\n    });    Flutter SDK  Account account = Account(client);\\n\\nResponse user = await account.createJWT();\\n    Android SDK  val account = Account(client)\\n\\nval response = account.createJWT()\\n    Apple SDK  let account = Account(client)\\n\\nlet response = try await account.createJWT()  \", \"After you get your valid token, you can pass it to your server and use it to initialize your Appwrite Server SDK and start making API calls. Your JWT is valid for a maximum time of 15 minutes or less if the user session has expired before that time.\", \"  Node.js  const { Client } = require('node-appwrite');\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setJWT('919c2db5d4...a2a3346ad2');         // Your secret JWT\\n    PHP  use Appwrite\\\\Client;\\n\\n$client = (new Client())\\n    ->setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    ->setProject('[PROJECT_ID]')                // Your project ID\\n    ->setJWT('919c2db5d4...a2a3346ad2');         // Your secret JWT\\n    Python  from appwrite.client import Client\\n\\nclient = Client()\\n\\nclient = (client\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret API key\\n)\\n    Ruby  require 'appwrite'\\n\\nclient = Client.new()\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret JWT\\n    Deno  import { Client } from \\\"https://deno.land/x/appwrite/mod.ts\\\";\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setJWT('919c2db5d4...a2a3346ad2');         // Your secret JWT\\n    Dart  import 'package:dart_appwrite/dart_appwrite.dart';\\n\\nClient client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setJWT('919c2db5d4...a2a3346ad2');         // Your secret JWT\\n    Kotlin  import io.appwrite.Client\\n\\nval client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setJWT(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret JWT\\n    Swift  import Appwrite\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setJWT(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret JWT\\n  \"]}, {\"level\": 2, \"title\": \"Make Your First Request\", \"body\": [\"After your SDK configuration is set, create any of the Appwrite service objects and choose any request to send. Full documentation for any service method you would like to use can be found in your SDK documentation or in the API References section.\", \"  Node.js  const { ID, Users } = require('node-appwrite');\\n\\nconst users = new Users(client);\\n\\nlet promise = users.create(\\n    ID.unique(),\\n    'email@example.com',\\n    null,\\n    'password'\\n);\\n\\npromise.then(function (response) {\\n    console.log(response);\\n}, function (error) {\\n    console.log(error);\\n});    PHP  use Appwrite\\\\ID;\\nuse Appwrite\\\\Services\\\\Users;\\n                \\n$users = new Users($client);\\n\\n$user = $users->create(\\n    userId: ID::unique(),\\n    email: 'email@example.com',\\n    phone: null,\\n    password: 'password'\\n);\\n    Python  from appwrite.id import ID\\nfrom appwrite.services.users import Users\\n\\nusers = Users(client)\\n\\nuser = users.create(\\n    user_id=ID.unique(),\\n    email='email@example.com',\\n    phone=None,\\n    password='password'\\n)    Ruby  require 'appwrite'\\n\\nusers = Appwrite::Users.new(client)\\n\\nuser = users.create(\\n    userId: ID.unique(),\\n    email: 'email@example.com',\\n    phone: nil,\\n    password: 'password'\\n)    Deno  import { ID, Users } from \\\"https://deno.land/x/appwrite/mod.ts\\\";\\n                \\nconst users = new Users(client);\\n\\nlet promise = users.create(\\n    ID.unique(),\\n    'email@example.com',\\n    null,\\n    'password'\\n);\\n\\npromise.then(function (response) {\\n    console.log(response);\\n}, function (error) {\\n    console.log(error);\\n});    Dart  import 'package:dart_appwrite/dart_appwrite.dart';\\n\\nfinal users = Users(client);\\n\\nfinal user = await users.create(\\n    userId: ID.unique(),\\n    email: 'email@example.com',\\n    phone: null,\\n    password: 'password'\\n);    Kotlin  import io.appwrite.ID\\nimport io.appwrite.services.Users\\n\\nval users = Users(client)\\n\\nval user = users.create(\\n    userId = ID.unique(),\\n    email = 'email@example.com',\\n    phone = null,\\n    password = 'password'\\n)    Swift  import Appwrite\\nimport AppwriteModels\\n                \\nlet users = Users(client)\\n\\nlet user = try await users.create(\\n    userId: ID.unique(),\\n    email: \\\"email@example.com\\\",\\n    phone: nil,\\n    password: \\\"password\\\"\\n)  \"]}, {\"level\": 2, \"title\": \"Full Example\", \"body\": [\"  Node.js  const { Client, ID, Users } = require('node-appwrite');\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n\\nconst users = new Users(client);\\n\\nlet promise = users.create(\\n    ID.unique(),\\n    'email@example.com',\\n    null,\\n    'password'\\n);\\n\\npromise.then(function (response) {\\n    console.log(response);\\n}, function (error) {\\n    console.log(error);\\n});    PHP  use Appwrite\\\\Client;\\nuse Appwrite\\\\ID;\\nuse Appwrite\\\\Services\\\\Users;\\n\\n$client = (new Client())\\n    ->setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    ->setProject('[PROJECT_ID]')                // Your project ID\\n    ->setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n\\n$users = new Users($client);\\n\\n$user = $users->create(\\n    userId: ID::unique(),\\n    email: 'email@example.com',\\n    phone: null,\\n    password: 'password'\\n);    Python  from appwrite.client import Client\\nfrom appwrite.id import ID\\nfrom appwrite.services.users import Users\\n\\nclient = Client()\\n\\nclient = (client\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret API key\\n)\\n\\nusers = Users(client)\\n\\nuser = users.create(\\n    user_id=ID.unique(),\\n    email='email@example.com',\\n    phone=None,\\n    password='password'\\n)    Ruby  require 'appwrite'\\n\\ninclude Appwrite\\n\\nclient = Client.new()\\n    .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                # Your project ID\\n    .set_key('919c2db5d4...a2a3346ad2')          # Your secret API key\\n\\nusers = Users.new(client)\\n\\nuser = users.create(\\n    userId: ID.unique(),\\n    email: 'email@example.com',\\n    phone: nil,\\n    password: 'password'\\n)    Deno  import { Client, ID, Users } from \\\"https://deno.land/x/appwrite/mod.ts\\\";\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2')          // Your secret API key\\n\\nconst users = new Users(client);\\n\\nlet promise = users.create(\\n    ID.unique(),\\n    'email@example.com',\\n    null,\\n    'password'\\n);\\n\\npromise.then(function (response) {\\n    console.log(response);\\n}, function (error) {\\n    console.log(error);\\n});    Dart  import 'package:dart_appwrite/dart_appwrite.dart';\\n\\nfinal client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]')                // Your project ID\\n    .setKey('919c2db5d4...a2a3346ad2');         // Your secret API key\\n\\nfinal users = Users(client);\\n\\nfinal user = await users.create(\\n    userId: ID.unique(),\\n    email: 'email@example.com',\\n    phone: null,\\n    password: 'password'\\n);    Kotlin  import io.appwrite.Client\\nimport io.appwrite.ID\\nimport io.appwrite.services.Users\\n\\nval client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setKey(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret API key\\n\\nval users = Users(client)\\n\\nval user = users.create(\\n    userId = ID.unique(),\\n    email = 'email@example.com',\\n    phone = null,\\n    password = 'password'\\n)    Swift  import Appwrite\\nimport AppwriteModels\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n    .setKey(\\\"919c2db5d4...a2a3346ad2\\\")          // Your secret API key\\n\\nlet users = Users(client)\\n\\nlet user = try await users.create(\\n    userId: ID.unique(),\\n    email: \\\"email@example.com\\\",\\n    phone: nil,\\n    password: \\\"password\\\"\\n)  \"]}]", "metadata": {"source": "https://appwrite.io/docs/getting-started-for-server"}}