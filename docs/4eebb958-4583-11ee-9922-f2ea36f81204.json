{"page_content": "[{\"level\": 1, \"title\": \" Getting Started for Apple \", \"body\": [\"Appwrite is a development platform that provides a powerful API and management console to get your next project up and running quickly.\", \"Create your first project now and start building on Appwrite Cloud.\"]}, {\"level\": 2, \"title\": \"Add your Apple Platform\", \"body\": [\"To init your SDK and start interacting with Appwrite services, you need to add a new Apple platform to your project. To add a new platform, go to your Appwrite Console, choose the project you created in the step before, and click the 'Add Platform' button. Only API requests initiated from platforms added to your Appwrite project will be accepted. This prevents unauthorized apps from accessing your Appwrite project.\", \"From the options, choose to add a new Apple platform, select the iOS, macOS, watchOS or tvOS tab and add your app name and bundle identifier, Your bundle identifier can be found at the top of the General tab in your project settings, or in your Info.plist file. By registering your new app platform, you are allowing your app to communicate with the Appwrite API.\"]}, {\"level\": 2, \"title\": \"Get Appwrite Apple SDK\", \"body\": []}, {\"level\": 3, \"title\": \"Using Xcode\", \"body\": [\" Select File > Add Packages Search for the Appwrite SDK with the URL https://github.com/appwrite/sdk-for-apple In the right panel, select your target project and add your desired version rules Select Add Package and wait for package resolution to complete Make sure the Appwrite package product is checked and select Add Package again\"]}, {\"level\": 3, \"title\": \"Using Swift Packages\", \"body\": [\"Add the following to your Package.swift file: \", \" dependencies: [\\n    .package(\\n        name: \\\"Appwrite\\\",\\n        url: \\\"https://github.com/appwrite/sdk-for-apple\\\",\\n        .exact(\\\"2.0.0\\\")\\n    )\\n]')\", \"Then add the dependency to your target:\", \" targets: [\\n    .target(\\n        name: \\\"[YOUR_TARGET]\\\",\\n        dependencies: [\\n            \\\"Appwrite\\\"\\n        ]\\n    )\\n]\"]}, {\"level\": 3, \"title\": \"OAuth Callback\", \"body\": [\"In order to capture the Appwrite OAuth callback url, the following URL scheme needs to added to your Info.plist.\", \" <key>CFBundleURLTypes</key>\\n<array>\\n<dict>\\n    <key>CFBundleTypeRole</key>\\n    <string>Editor</string>\\n    <key>CFBundleURLName</key>\\n    <string>io.appwrite</string>\\n    <key>CFBundleURLSchemes</key>\\n    <array>\\n        <string>appwrite-callback-[PROJECT_ID]</string>\\n    </array>\\n</dict>\\n</array>\\n\", \"If you're using UIKit, you'll also need to add a hook to your SceneDelegate.swift file to ensure cookies work correctly.\", \" \\nfunc scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\\n    guard let url = URLContexts.first?.url,\\n        url.absoluteString.contains(\\\"appwrite-callback\\\") else {\\n        return\\n    }\\n    WebAuthComponent.handleIncomingCookie(from: url)\\n}\\n\"]}, {\"level\": 2, \"title\": \"Init your SDK\", \"body\": [\"Initialize your SDK code with your project ID, which can be found in your project settings page.\", \" import Appwrite\\nimport AppwriteModels\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\", \"Before sending any API calls to your new Appwrite project, make sure your device or emulator has network access to your Appwrite project's hostname or IP address.\"]}, {\"level\": 2, \"title\": \"Make Your First Request\", \"body\": [\"After your SDK configuration is set, access any of the Appwrite services and choose any request to send. Complete documentation for any service method you would like to use can be found in your SDK documentation or in the API References section.\", \" // Register User\\nlet account = Account(client)\\n\\nlet user = try await account.create(\\n    userId: ID.unique(),\\n    email: \\\"email@example.com\\\",\\n    password: \\\"password\\\"\\n)\"]}, {\"level\": 2, \"title\": \"Listen to Changes\", \"body\": [\"To listen to changes in realtime from Appwrite, subscribe to a variety of channels and receive updates within milliseconds. Full documentation for Realtime can be found here.\", \" // Subscribe to files channel\\nlet realtime = Realtime(client)\\n\\nlet subscription = realtime.subscribe(channels: [\\\"files\\\"]) { message in\\n    if (message.events!.contains(\\\"buckets.*.files.*.create\\\")) {\\n        // Log when a new file is uploaded\\n        print(String(describing: message.payload))\\n    }\\n}\", \"If you're using macOS, for realtime to function correctly you need to ensure you have both \\\"Outgoing Connections (Client)\\\" and \\\"Incoming Connections (Server)\\\" enabled in your App Sandbox settings in your project file.\"]}, {\"level\": 2, \"title\": \"Full Example\", \"body\": [\" import Appwrite\\nimport AppwriteModels\\n\\nlet client = Client()\\n  .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your Appwrite Endpoint\\n  .setProject(\\\"[PROJECT_ID]\\\")                // Your project ID\\n\\n// Register User\\nlet account = Account(client)\\n\\nlet user = try await account.create(\\n    userId: ID.unique(),\\n    email: \\\"email@example.com\\\",\\n    password: \\\"password\\\"\\n)\\n\\n// Subscribe to files channel\\nlet realtime = Realtime(client)\\n\\nlet subscription = realtime.subscribe(channels: [\\\"files\\\"]) { message in\\n    if (message.events!.contains(\\\"buckets.*.files.*.create\\\")) {\\n        // Log when a new file is uploaded\\n        print(String(describing: message.payload))\\n    }\\n}\"]}]", "metadata": {"source": "http://167.172.175.165:2080/docs/getting-started-for-apple"}}