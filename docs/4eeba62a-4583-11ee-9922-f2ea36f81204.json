{"page_content": "[{\"level\": 1, \"title\": \" Getting Started for Flutter \", \"body\": [\"Appwrite is a development platform that provides a powerful API and management console to get your next project up and running quickly.\", \"Create your first project now and start building on Appwrite Cloud.\"]}, {\"level\": 2, \"title\": \"Add your Flutter Platform\", \"body\": [\"To init your SDK and start interacting with Appwrite services, you need to add a new Flutter platform to your project. To add a new platform, go to your Appwrite Console, choose the project you created in the step before, and click the 'Add Platform' button. Only API requests initiated from platforms added to your Appwrite project will be accepted. This prevents unauthorized apps from accessing your Appwrite project.\", \"From the options, choose to add a new Flutter platform and add your app credentials. Appwrite Flutter SDK currently supports building apps for Android, iOS, Linux, Mac OS, Web and Windows.\", \"If you are building your Flutter application for multiple devices, you have to follow this process for each different device.\"]}, {\"level\": 3, \"title\": \"Android\", \"body\": [\"For Android first add your app name and package name, Your package name is generally the applicationId in your app-level build.gradle file. By registering your new app platform, you are allowing your app to communicate with the Appwrite API.\", \"In order to capture the Appwrite OAuth callback url, the following activity needs to be added inside the `<application>` tag, along side the existing `<activity>` tags in your AndroidManifest.xml. Be sure to replace the [PROJECT_ID] string with your actual Appwrite project ID. You can find your Appwrite project ID in you project settings screen in your Appwrite Console.\", \" <manifest ...>\\n  ...\\n  <application ...>\\n    ...\\n    <!-- Add this inside the `<application>` tag, along side the existing `<activity>` tags -->\\n    <activity android:name=\\\"com.linusu.flutter_web_auth_2.CallbackActivity\\\" android:exported=\\\"true\\\">\\n      <intent-filter android:label=\\\"flutter_web_auth_2\\\">\\n        <action android:name=\\\"android.intent.action.VIEW\\\" />\\n        <category android:name=\\\"android.intent.category.DEFAULT\\\" />\\n        <category android:name=\\\"android.intent.category.BROWSABLE\\\" />\\n        <data android:scheme=\\\"appwrite-callback-[PROJECT_ID]\\\" />\\n      </intent-filter>\\n    </activity>\\n  </application>\\n</manifest>\"]}, {\"level\": 3, \"title\": \"iOS\", \"body\": [\"For iOS first add your app name and Bundle ID, You can find your Bundle Identifier in the General tab for your app's primary target in Xcode.\", \"The Appwrite SDK uses ASWebAuthenticationSession on iOS 12+ and SFAuthenticationSession on iOS 11 to allow OAuth authentication. You have to change your iOS Deployment Target in Xcode to be iOS >= 11 to be able to build your app on an emulator or a real device.\", \" In Xcode, open Runner.xcworkspace in your app's iOS folder. To view your app's settings, select the Runner project in the Xcode project navigator. Then, in the main view sidebar, select the Runner target. Select the General tab. In Deployment Info, 'Target' select iOS 11.0\"]}, {\"level\": 3, \"title\": \"Linux\", \"body\": [\"For Linux add your app name and package name, Your package name is generally the name in your pubspec.yaml file. If you cannot find the correct package name, run the application in linux, and make any request with proper exception handling, you should get the application id needed to add in the received error message.\"]}, {\"level\": 3, \"title\": \"macOS\", \"body\": [\"For macOS add your app name and Bundle ID, You can find your Bundle Identifier in the General tab for your app's primary target in Xcode.\", \"The Appwrite SDK uses ASWebAuthenticationSession on macOS 10.15+ to allow OAuth authentication. You have to change your macOS Deployment Target in Xcode to be macOS >= 10.15 to be able to build your app for macOS.\"]}, {\"level\": 3, \"title\": \"Web\", \"body\": [\"To build web apps that integrate with Appwrite successfully, you must add a web platform on your Appwrite project's dashboard and list the domain your website uses to allow communication to the Appwrite API. The process is similar to the adding a web platform in the web guide.\", \"For web in order to capture the OAuth2 callback URL and send it to the application using JavaScript postMessage(), you need to create an html file inside ./web folder of your Flutter project. For example auth.html with the following content.\", \" <!DOCTYPE html>\\n<title>Authentication complete</title>\\n<p>Authentication is complete. If this does not happen automatically, please\\nclose the window.\\n<script>\\n  window.opener.postMessage({\\n    'flutter-web-auth-2': window.location.href\\n  }, window.location.origin);\\n  window.close();\\n</script>\", \"The redirection URL passed to the authentication service must be the same as the URL on which the application is running (schema, host, port if necessary), and the path must point to created HTML file, /auth.html in this case. The callbackUrlScheme parameter of the authenticate() method does not take into account, so it is possible to use a schema for native platforms in the code.\", \" Flutter Web Cross-Domain Communication & Cookies While running Flutter Web, make sure your Appwrite server and your Flutter client use the same top-level domain and protocol (HTTP or HTTPS) to communicate. When communicating between different domains or protocols, you may receive HTTP status error 401 because some modern browsers block cross-site or insecure cookies for enhanced privacy. In production, Appwrite allows you set multiple custom-domains for each project.\"]}, {\"level\": 3, \"title\": \"Windows\", \"body\": [\"For Windows add your app name and package name, Your package name is generally the name in your pubspec.yaml file. If you cannot find the correct package name, run the application in windows, and make any request with proper exception handling, you should get the application id needed to add in the received error message.\"]}, {\"level\": 2, \"title\": \"Get Appwrite Flutter SDK\", \"body\": [\"Add Appwrite SDK to your package's pubspec.yaml file (view example):\", \" dependencies:\\n  appwrite: ^9.0.0\", \"You can also install the SDK using the Dart package manager from your terminal:\", \" flutter pub add appwrite\"]}, {\"level\": 2, \"title\": \"Init your SDK\", \"body\": [\"Initialize your SDK with your endpoint and project ID, which can be found on your project settings page. It's usually a good practice to initialize the Client and make it available across the app using the state management solution of your choice, as the Client is required for making any calls to the Appwrite API.\", \" import 'package:appwrite/appwrite.dart';\\n\\nClient client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]');         // Your project ID\", \"Before sending any API calls to your new Appwrite project, make sure your mobile device or emulator has network access to your Appwrite project's hostname or IP address.\"]}, {\"level\": 2, \"title\": \"Make Your First Request\", \"body\": [\"After your SDK configuration is set, access any of the Appwrite services and choose any request to send. Full documentation for any service method you would like to use can be found in your SDK documentation or in the API References section.\", \" // Register User\\nAccount account = Account(client);\\n\\nfinal user = await account.create(\\n    userId: ID.unique(),\\n    email: 'me@appwrite.io',\\n    password: 'password',\\n    name: 'My Name'\\n);\\n\"]}, {\"level\": 2, \"title\": \"Listen to Changes\", \"body\": [\"If you want to listen to changes in realtime from Appwrite, you can subscribe to a variety of channels and receive updates within milliseconds. Full documentation for Realtime can be found here.\", \" // Subscribe to files channel\\nfinal realtime = Realtime(client);\\nfinal subscription = realtime.subscribe(['files']);\\n\\nsubscription.stream.listen((response) {\\n    if (response.events.contains('buckets.*.files.*.create') {\\n        // Log when a new file is uploaded\\n        print(response.payload);\\n    }\\n});\\n\"]}, {\"level\": 2, \"title\": \"Full Example\", \"body\": [\" import 'package:appwrite/appwrite.dart';\\n\\nClient client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1')  // Your Appwrite Endpoint\\n    .setProject('[PROJECT_ID]');          // Your project ID\\n\\nAccount account = Account(client);\\n\\nfinal user = await account.create(\\n    userId: ID.unique(),\\n    email: 'me@appwrite.io',\\n    password: 'password',\\n    name: 'My Name'\\n);\\n\\n// Subscribe to files channel\\nfinal realtime = Realtime(client);\\nfinal subscription = realtime.subscribe(['files']);\\n\\nsubscription.stream.listen((response) {\\n    if (response.events.contains('buckets.*.files.*.create')) {\\n        // Log when a new file is uploaded\\n        print(response.payload);\\n    }\\n});\\n\"]}]", "metadata": {"source": "http://167.172.175.165:2080/docs/getting-started-for-flutter"}}