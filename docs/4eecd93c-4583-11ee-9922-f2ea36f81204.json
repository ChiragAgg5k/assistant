{"page_content": "[{\"level\": 1, \"title\": \" Client to Server Auth \", \"body\": [\" You can extend Appwrite's APIs by building backend apps using Server SDKs. To secure your backend app's APIs, client apps must prove their identity against your backend app before accessing sensitive information. You can secure these APIs and enforce access permissions in your backend app by using JWT authentication.\", \" If you are already authenticated on your client-side app and need your backend app to act on behalf of the user, this guide will walk you through the process.\"]}, {\"level\": 2, \"title\": \"Proof of Identity\", \"body\": [\"Before making requests to your backend APIs, your client application needs to first create a session directly with Appwrite using the account service. This session will act like an ID card for the user and can be used to access resources in Appwrite. The client will only receive information accessible to the user based on the resources' permissions.\", \"When you build backend APIs to extend Appwrite's functionality, these APIs should still respect access permissions to keep user data secure. Appwrite's backend SDKs allows you to securely act on behalf of a user with the same permissions by using JWT authentication.\"]}, {\"level\": 2, \"title\": \"JWT Authentication\", \"body\": [\"JSON Web Tokens (JWTs) are a secure means to transfer information or claims between two parties. JWTs act like temporary copies of the user's ID card that allow Appwrite's Server SDKs to access information on behalf of a user.\", \"You need to create a session using the Client SDKs before generating a JWT. The JWT will be a stateless proof of claim for the identity of the authenticated user and expire after 15 minutes or when the session is deleted.\", \"You can generate a JWT like this:\", \"  Web  import { Client, Account } from \\\"appwrite\\\";\\n\\nconst client = new Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]');                 // Your project ID\\n\\nconst account = new Account(client);\\n\\nconst user = await account.createJWT();    Flutter  import 'package:appwrite/appwrite.dart';\\n\\nfinal client = Client()\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]');                 // Your project ID\\n\\nfinal account = Account(client);\\n\\nfinal jwt = await account.createJWT();\\n\\n    Android  import io.appwrite.Client\\nimport io.appwrite.services.Account\\n\\nval client = Client(context)\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                  // Your project ID\\n\\nval account = Account(client)\\n\\nval jwt = account.createJWT()   Apple  import Appwrite\\n\\nlet client = Client()\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\") // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                  // Your project ID\\n\\nlet account = Account(client)\\n\\nlet jwt = try await account.createJWT()   GraphQL  mutation {\\n    accountCreateJWT {\\n        jwt\\n    }\\n}  \", \"Your server application can use the JWT to act on behalf of the user by creating a Client instance with the JWT for each request it receives. To keep your API secure, discard the client object after each request.\", \"  Node.js  const { Client } = require('node-appwrite');\\n\\nconst client = new Client();\\n\\nclient\\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\\n    .setProject('[PROJECT_ID]')                  // Your project ID\\n    .setJWT('eyJJ9.eyJ...886ca');                // Your secret JSON Web Token    PHP  use Appwrite\\\\Client;\\n\\n$client = new Client();\\n\\n$client\\n    ->setEndpoint('https://cloud.appwrite.io/v1')            // Your API Endpoint\\n    ->setProject('[PROJECT_ID]')                             // Your project ID\\n    ->setJWT('eyJJ9.eyJ...886ca');                           // Your secret JSON Web Token    Python  from appwrite.client import Client\\n\\nclient = Client()\\n\\n(client\\n  .set_endpoint('https://cloud.appwrite.io/v1') # Your API Endpoint\\n  .set_project('[PROJECT_ID]')                  # Your project ID\\n  .set_jwt('eyJJ9.eyJ...886ca')                 # Your secret JSON Web Token\\n)    Ruby  require 'appwrite'\\n\\ninclude Appwrite\\n\\nclient = Client.new\\n\\nclient\\n    .set_endpoint('https://cloud.appwrite.io/v1')   # Your API Endpoint\\n    .set_project('[PROJECT_ID]')                    # Your project ID\\n    .set_jwt('eyJJ9.eyJ...886ca')                   # Your secret JSON Web Token    Deno  import { Client } from \\\"https://deno.land/x/appwrite/mod.ts\\\";\\n\\nlet client = new Client();\\n\\nclient\\n    .setEndpoint('https://cloud.appwrite.io/v1')    // Your API Endpoint\\n    .setProject('[PROJECT_ID]')                     // Your project ID\\n    .setJWT('eyJJ9.eyJ...886ca');                   // Your secret JSON Web Token    Dart  import 'package:dart_appwrite/dart_appwrite.dart';\\n\\nfinal client = Client();\\n\\nclient\\n    .setEndpoint('https://cloud.appwrite.io/v1')    // Your API Endpoint\\n    .setProject('[PROJECT_ID]')                     // Your project ID\\n    .setJWT('eyJJ9.eyJ...886ca');                   // Your secret JSON Web Token    Kotlin  import io.appwrite.Client\\n\\nval client = Client()\\n\\nclient\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\")    // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                     // Your project ID\\n    .setJWT(\\\"eyJJ9.eyJ...886ca\\\")                    // Your secret JSON Web Token    Swift  import Appwrite\\n\\nlet client = Client()\\n\\nclient\\n    .setEndpoint(\\\"https://cloud.appwrite.io/v1\\\")    // Your API Endpoint\\n    .setProject(\\\"[PROJECT_ID]\\\")                     // Your project ID\\n    .setJWT(\\\"eyJJ9.eyJ...886ca\\\")                    // Your secret JSON Web Token    .NET  using Appwrite;\\n\\nvar client = new Client();\\n\\nclient\\n    .SetEndpoint(\\\"https://cloud.appwrite.io/v1\\\")    // Your API Endpoint\\n    .SetProject(\\\"[PROJECT_ID]\\\")                     // Your project ID\\n    .SetJWT(\\\"eyJJ9.eyJ...886ca\\\");                   // Your secret JSON Web Token  \"]}, {\"level\": 2, \"title\": \"When Should I Use JWT Auth?\", \"body\": [\"JWT auth is useful when you need your backend app's Server SDK to be restricted by the same set of permissions.\", \"If your backend app's Server SDK is using an API key, it will fetch all resources regardless of permissions. This means the Server SDK might fetch files and documents your user should not be able to see, which is not helpful when you need to act on behalf of a user.\", \"If your backend app's Server SDK is using a JWT, it will only fetch resources your user has permissions to access.\"]}]", "metadata": {"source": "http://167.172.175.165:2080/docs/authentication-server"}}